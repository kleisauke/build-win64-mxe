This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Mon, 27 Sep 2010 12:00:52 +0200
Subject: [PATCH 1/4] fix .pc requirements


diff --git a/librsvg.pc.in b/librsvg.pc.in
index 1111111..2222222 100644
--- a/librsvg.pc.in
+++ b/librsvg.pc.in
@@ -9,7 +9,7 @@ css_supported=true
 Name: librsvg
 Description: library that renders svg files
 Version: @VERSION@
-Requires: glib-2.0 gio-2.0 gdk-pixbuf-2.0 cairo
+Requires: glib-2.0 gio-2.0 gdk-pixbuf-2.0 cairo cairo-gobject pangocairo
 Requires.private:
 Libs: -L${libdir} -lrsvg-@RSVG_API_MAJOR_VERSION@ -lm
 Cflags: -I${includedir}/librsvg-@RSVG_API_VERSION@

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sun, 27 Jan 2019 15:00:00 +0200
Subject: [PATCH 2/4] Revert "Include Rust debuginfo in release builds"

This reverts commit 8215d7f1f581f0aaa317cccc3e974c61d1a6ad84.

diff --git a/Cargo.toml b/Cargo.toml
index 1111111..2222222 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -6,4 +6,4 @@ members = [
 ]
 
 [profile.release]
-debug = true
+debug = false

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Fri, 17 May 2019 13:00:00 +0200
Subject: [PATCH 3/4] Disable Cairo script features

Our Cairo was build with `--disable-script`.

Reported here: https://github.com/gtk-rs/cairo/issues/259

diff --git a/vendor/cairo-rs/src/device.rs b/vendor/cairo-rs/src/device.rs
index 1111111..2222222 100644
--- a/vendor/cairo-rs/src/device.rs
+++ b/vendor/cairo-rs/src/device.rs
@@ -37,7 +37,7 @@ impl Device {
         self.0
     }
 
-    pub fn create<P: AsRef<Path>>(filename: P) -> Option<Device> {
+    /*pub fn create<P: AsRef<Path>>(filename: P) -> Option<Device> {
         unsafe {
             let filename = filename.as_ref().to_string_lossy().into_owned();
             let filename = CString::new(filename).unwrap();
@@ -100,7 +100,7 @@ impl Device {
             let comment = CString::new(comment).unwrap();
             ffi::cairo_script_write_comment(self.to_raw_none(), comment.as_ptr(), len as i32)
         }
-    }
+    }*/
 
     pub fn status(&self) -> Status {
         unsafe { Status::from(ffi::cairo_device_status(self.to_raw_none())) }
diff --git a/vendor/cairo-sys-rs/src/lib.rs b/vendor/cairo-sys-rs/src/lib.rs
index 1111111..2222222 100644
--- a/vendor/cairo-sys-rs/src/lib.rs
+++ b/vendor/cairo-sys-rs/src/lib.rs
@@ -1348,7 +1348,7 @@ extern "C" {
     pub fn cairo_quartz_surface_get_cg_context(surface: *mut cairo_surface_t) -> CGContextRef;
 
     // CAIRO SCRIPT
-    pub fn cairo_script_create(filename: *const c_char) -> *mut cairo_device_t;
+    /*pub fn cairo_script_create(filename: *const c_char) -> *mut cairo_device_t;
     pub fn cairo_script_create_for_stream(
         write_func: cairo_write_func_t,
         closure: *mut c_void,
@@ -1373,7 +1373,7 @@ extern "C" {
         script: *mut cairo_device_t,
         comment: *const c_char,
         len: c_int,
-    );
+    );*/
     pub fn cairo_device_destroy(device: *mut cairo_device_t);
     pub fn cairo_device_status(device: *mut cairo_device_t) -> cairo_status_t;
     pub fn cairo_device_finish(device: *mut cairo_device_t);
