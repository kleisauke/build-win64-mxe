This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Fri, 14 Feb 2020 15:20:00 +0100
Subject: [PATCH 1/2] Add support for targeting ARM/ARM64

See: mxe/mxe#2330

diff --git a/Makefile b/Makefile
index 1111111..2222222 100644
--- a/Makefile
+++ b/Makefile
@@ -8,7 +8,8 @@ EXT_DIR  := $(TOP_DIR)/ext
 # See docs/gmsl.html for further information
 include $(EXT_DIR)/gmsl
 
-MXE_TRIPLETS       := i686-w64-mingw32 x86_64-w64-mingw32
+MXE_TRIPLETS       := i686-w64-mingw32 x86_64-w64-mingw32 \
+                      armv7-w64-mingw32 aarch64-w64-mingw32
 MXE_LIB_TYPES      := static shared
 MXE_TARGET_LIST    := $(strip $(foreach TRIPLET,$(MXE_TRIPLETS),\
                           $(addprefix $(TRIPLET).,$(MXE_LIB_TYPES))))
@@ -774,8 +775,10 @@ build-only-$(1)_$(3): BUILD_$(if $(findstring shared,$(3)),SHARED,STATIC) = TRUE
 build-only-$(1)_$(3): BUILD_$(if $(call seq,$(TARGET),$(BUILD)),NATIVE,CROSS) = TRUE
 build-only-$(1)_$(3): $(if $(findstring win32,$(TARGET)),WIN32,POSIX)_THREADS = TRUE
 build-only-$(1)_$(3): LIB_SUFFIX = $(if $(findstring shared,$(3)),dll,a)
-build-only-$(1)_$(3): BITS = $(if $(findstring x86_64,$(3)),64,32)
+build-only-$(1)_$(3): BITS = $(if $(or $(findstring x86_64,$(3)),$(findstring aarch64,$(3))),64,32)
 build-only-$(1)_$(3): PROCESSOR = $(firstword $(call split,-,$(3)))
+build-only-$(1)_$(3): IS_X86 = $(or $(findstring x86_64,$(3)),$(findstring i686,$(3)))
+build-only-$(1)_$(3): IS_ARM = $(or $(findstring armv7,$(3)),$(findstring aarch64,$(3)))
 build-only-$(1)_$(3): BUILD_TYPE = $(if $(findstring debug,$(3) $($(1)_CONFIGURE_OPTS)),debug,release)
 build-only-$(1)_$(3): BUILD_TYPE_SUFFIX = $(if $(findstring debug,$(3) $($(1)_CONFIGURE_OPTS)),d)
 build-only-$(1)_$(3): INSTALL_STRIP_TOOLCHAIN = install$(if $(STRIP_TOOLCHAIN),-strip)
diff --git a/plugins/meson-wrapper/conf/mxe-crossfile.meson.in b/plugins/meson-wrapper/conf/mxe-crossfile.meson.in
index 1111111..2222222 100644
--- a/plugins/meson-wrapper/conf/mxe-crossfile.meson.in
+++ b/plugins/meson-wrapper/conf/mxe-crossfile.meson.in
@@ -1,8 +1,8 @@
 # This file is part of MXE. See LICENSE.md for licensing information.
 
 [binaries]
-c = '@PREFIX@/bin/@TARGET@-gcc'
-cpp = '@PREFIX@/bin/@TARGET@-g++'
+c = '@PREFIX@/bin/@TARGET@-@CC@'
+cpp = '@PREFIX@/bin/@TARGET@-@CXX@'
 ar = '@PREFIX@/bin/@TARGET@-ar'
 ranlib = '@PREFIX@/bin/@TARGET@-ranlib'
 ld = '@PREFIX@/bin/@TARGET@-ld'
@@ -10,6 +10,10 @@ strip = '@PREFIX@/bin/@TARGET@-strip'
 windres = '@PREFIX@/bin/@TARGET@-windres'
 windmc = '@PREFIX@/bin/@TARGET@-windmc'
 pkgconfig = '@PREFIX@/bin/@TARGET@-pkg-config'
+glib-mkenums = '@PREFIX@/@TARGET@/bin/glib-mkenums'
+glib-genmarshal = '@PREFIX@/@TARGET@/bin/glib-genmarshal'
+glib-compile-schemas = '@PREFIX@/@TARGET@/bin/glib-compile-schemas'
+glib-compile-resources = '@PREFIX@/@TARGET@/bin/glib-compile-resources'
 # MXE forbids this
 # exe_wrapper = 'wine'
 
diff --git a/plugins/meson-wrapper/meson-wrapper.mk b/plugins/meson-wrapper/meson-wrapper.mk
index 1111111..2222222 100644
--- a/plugins/meson-wrapper/meson-wrapper.mk
+++ b/plugins/meson-wrapper/meson-wrapper.mk
@@ -16,11 +16,12 @@ define $(PKG)_BUILD
         -DTARGET=$(TARGET) \
         -DBUILD=$(BUILD) \
         -DCPU_FAMILY=$(strip \
-             $(if $(findstring x86_64,$(TARGET)),x86_64,\
-             $(if $(findstring i686,$(TARGET)),x86))) \
-        -DCPU=$(strip \
-             $(if $(findstring x86_64,$(TARGET)),x86_64,\
-             $(if $(findstring i686,$(TARGET)),i686))) \
+            $(if $(findstring armv7,$(PROCESSOR)),arm, \
+            $(if $(findstring i686,$(PROCESSOR)),x86, \
+            $(PROCESSOR)))) \
+        -DCPU=$(PROCESSOR) \
+        -DCC=$(if $(IS_LLVM),clang,gcc) \
+        -DCXX=$(if $(IS_LLVM),clang++,g++) \
         -DINPUT='$(PWD)/plugins/meson-wrapper/conf/mxe-crossfile.meson.in' \
         -DOUTPUT='$(PREFIX)/$(TARGET)/share/meson/mxe-crossfile.meson'
 
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Tue, 3 Mar 2020 15:00:00 +0100
Subject: [PATCH 2/2] Update libffi test

See:
http://www.chiark.greenend.org.uk/doc/libffi-dev/html/Simple-Example.html#Simple-Example

diff --git a/src/libffi-test.c b/src/libffi-test.c
index 1111111..2222222 100644
--- a/src/libffi-test.c
+++ b/src/libffi-test.c
@@ -5,26 +5,30 @@
 #include <stdio.h>
 #include <ffi.h>
 
-int main(int argc, char *argv[])
+int main()
 {
     ffi_cif cif;
     ffi_type *args[1];
     void *values[1];
     char *s;
-    int rc;
-
-    (void)argc;
-    (void)argv;
+    ffi_arg rc;
 
+    /* Initialize the argument info vectors */    
     args[0] = &ffi_type_pointer;
     values[0] = &s;
 
-    if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,
-                           &ffi_type_uint, args) == FFI_OK)
+    /* Initialize the cif */
+    if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, 
+                           &ffi_type_sint, args) == FFI_OK)
     {
         s = "Hello World!";
         ffi_call(&cif, FFI_FN(puts), &rc, values);
-        s = "Goodbye!";
+        /* rc now holds the result of the call to puts */
+
+        /* values holds a pointer to the function's arg, so to 
+           call puts() again all we need to do is change the 
+           value of s */
+        s = "This is cool!";
         ffi_call(&cif, FFI_FN(puts), &rc, values);
     }
 
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Brand <mabrand@mabrand.nl>
Date: Sun, 17 Nov 2019 00:48:31 +0100
Subject: [PATCH 2/2] update mingw-w64 to 7.0.0


diff --git a/src/mingw-w64.mk b/src/mingw-w64.mk
index 1111111..2222222 100644
--- a/src/mingw-w64.mk
+++ b/src/mingw-w64.mk
@@ -4,8 +4,8 @@ PKG             := mingw-w64
 $(PKG)_WEBSITE  := https://mingw-w64.sourceforge.io/
 $(PKG)_DESCR    := MinGW-w64 Runtime
 $(PKG)_IGNORE   :=
-$(PKG)_VERSION  := 6.0.0
-$(PKG)_CHECKSUM := 805e11101e26d7897fce7d49cbb140d7bac15f3e085a91e0001e80b2adaf48f0
+$(PKG)_VERSION  := 7.0.0
+$(PKG)_CHECKSUM := aa20dfff3596f08a7f427aab74315a6cb80c2b086b4a107ed35af02f9496b628
 $(PKG)_SUBDIR   := $(PKG)-v$($(PKG)_VERSION)
 $(PKG)_FILE     := $(PKG)-v$($(PKG)_VERSION).tar.bz2
 $(PKG)_URL      := https://$(SOURCEFORGE_MIRROR)/project/$(PKG)/$(PKG)/$(PKG)-release/$($(PKG)_FILE)
